plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok'
    implementation 'commons-fileupload:commons-fileupload:1.5'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testAnnotationProcessor 'org.projectlombok:lombok' //추가

    // univcert / okhttp, simple 사용
    implementation 'com.github.in-seo:univcert:master-SNAPSHOT'
    implementation group: 'com.squareup.okhttp', name: 'okhttp', version: '2.7.5'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.2'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // web client
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // jwt 를 위한 dependency 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'com.auth0:java-jwt:3.18.3'
    implementation 'com.auth0:auth0-spring-security-api:1.5.2'

    // s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // SQL 파라미터 바인딩 정보 로깅 라이브러리 추가 - p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // Web Socket & STOMP
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // guava -> validation of string, check the null, not empty etc
    // guava 라이브러리 ->  Strings.isNullOrEmpty() or objects.isNull() 이런거 사용 가능하게 해줌
    implementation 'com.google.guava:guava:16.0.1'


    implementation 'javax.xml.bind:jaxb-api:2.3.0'

    // java -> jasypt , node -> .env
    implementation "com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3"

    // api 파싱을 위한 의존성
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Dto validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.apache.httpcomponents.client5:httpclient5:5.1.3'

    // query parameter 를 보여준다 -> 운영시스템에 적용하려면 꼭 성능테스트를 하고 사용하는 것이 좋다
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // jackson
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'


}

tasks.named('test') {
    useJUnitPlatform()
    // systemProperty 'jasypt.encryptor.password', findProperty("jasypt.encryptor.password")
    systemProperty 'jasypt.encryptor.password', findProperty("jasypt.encryptor.password")
}

bootJar {
    archiveFileName = 'app.jar'
}